#!/usr/bin/env python


import sys
import lcm
import time
import utm
import serial
import pynmea2 #https://github.com/Knio/pynmea2
from imusense import imud


class IMU(object):
    def __init__(self, port_name):
        self.port = serial.Serial(port_name, 4800, timeout=1.)  
        self.lcm = lcm.LCM()
        self.packet = imud()

    def readloop(self):
       while True:
	      line = self.port.readline()
              im   = line.split(',')
              
	      
              if im[0] == '$' :
		  
                   vals = [float(x) for x in im]
                   self.packet.ya= vals[0]
		   self.packet.pit = vals[1] 
                   self.packet.rol  = vals[2]
                   self.packet.magx= vals[3]
                   self.packet.magy = vals[4]
		   self.packet.magz = vals[5]
		   self.packet.accx= vals[6]
		   self.packet.accy = vals[7]
         	   self.packet.accz =vals[8]
		   self.packet.gyrox_radps=vals[9]
		   self.packet.gyroy_radps=vals[10]
		   self.packet.gyroz_radps=vals[11]
                   self.lcm.publish("IMU",self.packet.encode())
		   time.sleep(1)
		
       pass
                #print 'CODE not working (' + line + ')'
        
if __name__ == "__main__":
   imu_log = IMU('/dev/ttyUSB0')
   imu_log.readloop()
